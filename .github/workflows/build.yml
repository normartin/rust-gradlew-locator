on: [push, pull_request]

name: Build

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Toolchain
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions-rs/cargo@v1
        name: check
        with:
          command: check
      - uses: actions-rs/cargo@v1
        name: fmt
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        name: clippy
        with:
          command: clippy
          args: -- -D warnings
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Toolchain
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        name: Test
        with:
          command: test
          args: --verbose
      - uses: actions-rs/cargo@v1
        name: Build
        with:
          command: build
          args: --release --verbose
      - name: Optimize
        run: strip target/release/gw
        if: matrix.os != 'windows-latest'
      - uses: actions/upload-artifact@v1
        name: Archive artifact
        if: matrix.os != 'windows-latest'
        with:
          name: ${{ matrix.os }}
          path: target/release/gw
      - uses: actions/upload-artifact@v1
        name: Archive exe artifact
        if: matrix.os == 'windows-latest'
        with:
          name: ${{ matrix.os }}
          path: target/release/gw.exe